{"ast":null,"code":"const FRECCE = require('./data-2.json');\n\nclass Utility {\n  static getHourDiff(pStartHour, pEndHour) {\n    let res = '';\n    let aTmp = ''; // Trasformo l'orario di inizio in minuti\n\n    aTmp = pStartHour.split(':');\n    let nStartMin = Number(aTmp[0]) * 60 + Number(aTmp[1]); // Trasformo l'orario di fine in minuti\n\n    aTmp = pEndHour.split(':');\n    let nEndMin = Number(aTmp[0]) * 60 + Number(aTmp[1]); // Calcolo la differenza\n\n    let nDiff = 0;\n    nDiff = nStartMin > nEndMin ? nStartMin - nEndMin : nEndMin - nStartMin; // Formatto la stringa di uscita\n\n    let nDiffMin = 0;\n    let nDiffHour = 0;\n\n    if (nDiff > 59) {\n      nDiffMin = nDiff % 60;\n      nDiffHour = (nDiff - nDiffMin) / 60;\n    } else {\n      nDiffMin = nDiff;\n    }\n\n    res += this.displayDigit(nDiffHour);\n    res += 'h ';\n    res += this.displayDigit(nDiffMin);\n    res += 'm';\n    return res;\n  }\n\n  static displayDigit(n) {\n    return n < 10 ? '0' + n : n;\n  }\n\n  static ricercaTreni(partenza, arrivo) {\n    console.log(\"Partenza : \" + partenza);\n    console.log(\"arrivo : \" + arrivo);\n    let _soluzioni = [];\n    FRECCE.treni.forEach(treno => {\n      treno.fermate.forEach(fermata => {\n        if (fermata.stazione == partenza && fermata != treno.fermate[treno.fermate.length - 1]) {\n          let _pos = treno.fermate.indexOf(fermata);\n\n          let _soluzione_temp = treno.fermate.slice(_pos);\n\n          _soluzione_temp.slice(1).forEach(fermata_arrivo => {\n            if (fermata_arrivo.stazione == arrivo) {\n              let _pos_arrivo = treno.fermate.indexOf(fermata_arrivo);\n\n              let _treno = treno;\n              console.log(_treno);\n              _treno.fermate = treno.fermate.slice(_pos, _pos_arrivo);\n\n              _soluzioni.push(_treno);\n            }\n          });\n        }\n      });\n    });\n    console.log(_soluzioni.length + ' Soluzioni da ' + partenza + ' a ' + arrivo);\n    console.log('Restituisco le soluzioni: ');\n    console.log(_soluzioni);\n    return _soluzioni;\n  }\n\n}\n\nexport default Utility;","map":{"version":3,"sources":["/Users/cristophermoccia/WebstormProjects/react-ricerca-treni/src/Utility.js"],"names":["FRECCE","require","Utility","getHourDiff","pStartHour","pEndHour","res","aTmp","split","nStartMin","Number","nEndMin","nDiff","nDiffMin","nDiffHour","displayDigit","n","ricercaTreni","partenza","arrivo","console","log","_soluzioni","treni","forEach","treno","fermate","fermata","stazione","length","_pos","indexOf","_soluzione_temp","slice","fermata_arrivo","_pos_arrivo","_treno","push"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AAEA,MAAMC,OAAN,CAAc;AAGQ,SAAXC,WAAW,CAACC,UAAD,EAAaC,QAAb,EAAuB;AACrC,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,IAAI,GAAG,EAAX,CAFqC,CAGrC;;AACAA,IAAAA,IAAI,GAAGH,UAAU,CAACI,KAAX,CAAiB,GAAjB,CAAP;AACA,QAAIC,SAAS,GAAGC,MAAM,CAACH,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAAlB,GAAuBG,MAAM,CAACH,IAAI,CAAC,CAAD,CAAL,CAA7C,CALqC,CAMrC;;AACAA,IAAAA,IAAI,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAP;AACA,QAAIG,OAAO,GAAGD,MAAM,CAACH,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,EAAlB,GAAuBG,MAAM,CAACH,IAAI,CAAC,CAAD,CAAL,CAA3C,CARqC,CASrC;;AACA,QAAIK,KAAK,GAAG,CAAZ;AACAA,IAAAA,KAAK,GAAIH,SAAS,GAAGE,OAAb,GAAyBF,SAAS,GAAGE,OAArC,GAAiDA,OAAO,GAAGF,SAAnE,CAXqC,CAYrC;;AACA,QAAII,QAAQ,GAAG,CAAf;AACA,QAAIC,SAAS,GAAG,CAAhB;;AACA,QAAIF,KAAK,GAAG,EAAZ,EAAgB;AACZC,MAAAA,QAAQ,GAAGD,KAAK,GAAG,EAAnB;AACAE,MAAAA,SAAS,GAAG,CAACF,KAAK,GAAGC,QAAT,IAAqB,EAAjC;AACH,KAHD,MAGO;AACHA,MAAAA,QAAQ,GAAGD,KAAX;AACH;;AACDN,IAAAA,GAAG,IAAI,KAAKS,YAAL,CAAkBD,SAAlB,CAAP;AACAR,IAAAA,GAAG,IAAI,IAAP;AACAA,IAAAA,GAAG,IAAI,KAAKS,YAAL,CAAkBF,QAAlB,CAAP;AACAP,IAAAA,GAAG,IAAI,GAAP;AACA,WAAOA,GAAP;AACH;;AAEkB,SAAZS,YAAY,CAACC,CAAD,EAAI;AACnB,WAAQA,CAAC,GAAG,EAAL,GAAW,MAAMA,CAAjB,GAAqBA,CAA5B;AACH;;AAEkB,SAAZC,YAAY,CAACC,QAAD,EAAWC,MAAX,EAAmB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBH,QAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAcF,MAA1B;AACA,QAAIG,UAAU,GAAG,EAAjB;AACAtB,IAAAA,MAAM,CAACuB,KAAP,CAAaC,OAAb,CAAqBC,KAAK,IAAI;AAC1BA,MAAAA,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAsBG,OAAO,IAAI;AAC7B,YAAIA,OAAO,CAACC,QAAR,IAAoBV,QAApB,IAAgCS,OAAO,IAAIF,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACC,OAAN,CAAcG,MAAd,GAAuB,CAArC,CAA/C,EAAwF;AACpF,cAAIC,IAAI,GAAGL,KAAK,CAACC,OAAN,CAAcK,OAAd,CAAsBJ,OAAtB,CAAX;;AACA,cAAIK,eAAe,GAAGP,KAAK,CAACC,OAAN,CAAcO,KAAd,CAAoBH,IAApB,CAAtB;;AACAE,UAAAA,eAAe,CAACC,KAAhB,CAAsB,CAAtB,EAAyBT,OAAzB,CAAiCU,cAAc,IAAI;AAC/C,gBAAIA,cAAc,CAACN,QAAf,IAA2BT,MAA/B,EAAuC;AACnC,kBAAIgB,WAAW,GAAGV,KAAK,CAACC,OAAN,CAAcK,OAAd,CAAsBG,cAAtB,CAAlB;;AACA,kBAAIE,MAAM,GAAGX,KAAb;AACAL,cAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;AACAA,cAAAA,MAAM,CAACV,OAAP,GAAiBD,KAAK,CAACC,OAAN,CAAcO,KAAd,CAAoBH,IAApB,EAA0BK,WAA1B,CAAjB;;AACAb,cAAAA,UAAU,CAACe,IAAX,CAAgBD,MAAhB;AACH;AACJ,WARD;AASH;AACJ,OAdD;AAeH,KAhBD;AAiBAhB,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAU,CAACO,MAAX,GAAoB,gBAApB,GAAuCX,QAAvC,GAAkD,KAAlD,GAA0DC,MAAtE;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA,WAAOA,UAAP;AACH;;AA5DS;;AAgEd,eAAepB,OAAf","sourcesContent":["const FRECCE = require('./data-2.json');\n\nclass Utility {\n\n\n    static getHourDiff(pStartHour, pEndHour) {\n        let res = '';\n        let aTmp = '';\n        // Trasformo l'orario di inizio in minuti\n        aTmp = pStartHour.split(':');\n        let nStartMin = Number(aTmp[0]) * 60 + Number(aTmp[1]);\n        // Trasformo l'orario di fine in minuti\n        aTmp = pEndHour.split(':');\n        let nEndMin = Number(aTmp[0]) * 60 + Number(aTmp[1]);\n        // Calcolo la differenza\n        let nDiff = 0;\n        nDiff = (nStartMin > nEndMin) ? (nStartMin - nEndMin) : (nEndMin - nStartMin);\n        // Formatto la stringa di uscita\n        let nDiffMin = 0;\n        let nDiffHour = 0;\n        if (nDiff > 59) {\n            nDiffMin = nDiff % 60;\n            nDiffHour = (nDiff - nDiffMin) / 60;\n        } else {\n            nDiffMin = nDiff;\n        }\n        res += this.displayDigit(nDiffHour);\n        res += 'h ';\n        res += this.displayDigit(nDiffMin);\n        res += 'm';\n        return res;\n    }\n\n    static displayDigit(n) {\n        return (n < 10) ? '0' + n : n;\n    }\n\n    static ricercaTreni(partenza, arrivo) {\n        console.log(\"Partenza : \" + partenza);\n        console.log(\"arrivo : \" + arrivo);\n        let _soluzioni = [];\n        FRECCE.treni.forEach(treno => {\n            treno.fermate.forEach(fermata => {\n                if (fermata.stazione == partenza && fermata != treno.fermate[treno.fermate.length - 1]) {\n                    let _pos = treno.fermate.indexOf(fermata);\n                    let _soluzione_temp = treno.fermate.slice(_pos);\n                    _soluzione_temp.slice(1).forEach(fermata_arrivo => {\n                        if (fermata_arrivo.stazione == arrivo) {\n                            let _pos_arrivo = treno.fermate.indexOf(fermata_arrivo);\n                            let _treno = treno;\n                            console.log(_treno);\n                            _treno.fermate = treno.fermate.slice(_pos, _pos_arrivo);\n                            _soluzioni.push(_treno);\n                        }\n                    });\n                }\n            });\n        });\n        console.log(_soluzioni.length + ' Soluzioni da ' + partenza + ' a ' + arrivo);\n        console.log('Restituisco le soluzioni: ');\n        console.log(_soluzioni);\n        return _soluzioni;\n    }\n\n}\n\nexport default Utility;"]},"metadata":{},"sourceType":"module"}