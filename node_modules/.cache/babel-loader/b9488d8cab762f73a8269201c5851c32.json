{"ast":null,"code":"import Utility from \"../Utility\";\nimport App from \"../App\";\n\nclass ControllerRicerca {\n  constructor() {\n    this._partenza = \"Milano Centrale\";\n    this._arrivo = \"Roma Termini\";\n  }\n\n  handleSelectPartenzaChange(value) {\n    this._partenza = value;\n    App.singleton.setState({\n      treni: Utility.ricercaTreni(value, this._arrivo)\n    });\n  }\n\n  handleSelectArrivoChange(value) {\n    this._arrivo = value;\n    App.singleton.setState({\n      treni: Utility.ricercaTreni(this._partenza, value)\n    });\n  }\n\n  getDatiRigaTreno(treno) {\n    const _posPartenza = Utility.getPosFermata(treno, this._partenza);\n\n    const _posArrivo = Utility.getPosFermata(treno, this._arrivo);\n\n    let result = {\n      \"stazione_partenza\": treno.fermate[0].stazione,\n      \"stazione_arrivo\": treno.fermate[treno.fermate.length - 1].stazione,\n      \"orario_partenza\": treno.fermate[0].orario,\n      \"orario_arrivo\": treno.fermate[treno.fermate.length - 1].orario\n    };\n\n    if (_posPartenza && _posPartenza >= 0) {\n      result.stazione_partenza = treno.fermate[_posPartenza].stazione;\n      result.orario_partenza = treno.fermate[_posPartenza].orario;\n    }\n\n    if (_posArrivo && _posArrivo >= 0) {\n      result.stazione_arrivo = treno.fermate[_posArrivo].stazione;\n      result.orario_arrivo = treno.fermate[_posArrivo].orario;\n    }\n\n    result.durata = Utility.getHourDiff(result.orario_partenza, result.orario_arrivo);\n    return result;\n  }\n\n}\n\nexport default ControllerRicerca;","map":{"version":3,"sources":["/Users/antoninolatocca/Developer/React/react-ricerca-treni/src/controllo/ControllerRicerca.js"],"names":["Utility","App","ControllerRicerca","constructor","_partenza","_arrivo","handleSelectPartenzaChange","value","singleton","setState","treni","ricercaTreni","handleSelectArrivoChange","getDatiRigaTreno","treno","_posPartenza","getPosFermata","_posArrivo","result","fermate","stazione","length","orario","stazione_partenza","orario_partenza","stazione_arrivo","orario_arrivo","durata","getHourDiff"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,MAAMC,iBAAN,CAAwB;AAEpBC,EAAAA,WAAW,GAAG;AACV,SAAKC,SAAL,GAAiB,iBAAjB;AACA,SAAKC,OAAL,GAAe,cAAf;AACH;;AAEDC,EAAAA,0BAA0B,CAACC,KAAD,EAAQ;AAC9B,SAAKH,SAAL,GAAiBG,KAAjB;AACAN,IAAAA,GAAG,CAACO,SAAJ,CAAcC,QAAd,CAAuB;AAACC,MAAAA,KAAK,EAACV,OAAO,CAACW,YAAR,CAAqBJ,KAArB,EAA4B,KAAKF,OAAjC;AAAP,KAAvB;AACH;;AAEDO,EAAAA,wBAAwB,CAACL,KAAD,EAAQ;AAC5B,SAAKF,OAAL,GAAeE,KAAf;AACAN,IAAAA,GAAG,CAACO,SAAJ,CAAcC,QAAd,CAAuB;AAACC,MAAAA,KAAK,EAACV,OAAO,CAACW,YAAR,CAAqB,KAAKP,SAA1B,EAAqCG,KAArC;AAAP,KAAvB;AACH;;AAEDM,EAAAA,gBAAgB,CAACC,KAAD,EAAQ;AACpB,UAAMC,YAAY,GAAGf,OAAO,CAACgB,aAAR,CAAsBF,KAAtB,EAA6B,KAAKV,SAAlC,CAArB;;AACA,UAAMa,UAAU,GAAGjB,OAAO,CAACgB,aAAR,CAAsBF,KAAtB,EAA6B,KAAKT,OAAlC,CAAnB;;AAEA,QAAIa,MAAM,GAAG;AACT,2BAAqBJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBC,QAD7B;AAET,yBAAmBN,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACK,OAAN,CAAcE,MAAd,GAAsB,CAApC,EAAuCD,QAFjD;AAGT,yBAAmBN,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBG,MAH3B;AAIT,uBAAiBR,KAAK,CAACK,OAAN,CAAcL,KAAK,CAACK,OAAN,CAAcE,MAAd,GAAsB,CAApC,EAAuCC;AAJ/C,KAAb;;AAOA,QAAGP,YAAY,IAAIA,YAAY,IAAI,CAAnC,EAAsC;AACpCG,MAAAA,MAAM,CAACK,iBAAP,GAA2BT,KAAK,CAACK,OAAN,CAAcJ,YAAd,EAA4BK,QAAvD;AACAF,MAAAA,MAAM,CAACM,eAAP,GAAyBV,KAAK,CAACK,OAAN,CAAcJ,YAAd,EAA4BO,MAArD;AACD;;AACD,QAAGL,UAAU,IAAIA,UAAU,IAAI,CAA/B,EAAkC;AAChCC,MAAAA,MAAM,CAACO,eAAP,GAAyBX,KAAK,CAACK,OAAN,CAAcF,UAAd,EAA0BG,QAAnD;AACAF,MAAAA,MAAM,CAACQ,aAAP,GAAuBZ,KAAK,CAACK,OAAN,CAAcF,UAAd,EAA0BK,MAAjD;AACD;;AAEDJ,IAAAA,MAAM,CAACS,MAAP,GAAgB3B,OAAO,CAAC4B,WAAR,CAAoBV,MAAM,CAACM,eAA3B,EAA4CN,MAAM,CAACQ,aAAnD,CAAhB;AAEA,WAAOR,MAAP;AACH;;AAxCmB;;AA4CxB,eAAehB,iBAAf","sourcesContent":["import Utility from \"../Utility\";\nimport App from \"../App\";\n\nclass ControllerRicerca {\n\n    constructor() {\n        this._partenza = \"Milano Centrale\";\n        this._arrivo = \"Roma Termini\";\n    }\n\n    handleSelectPartenzaChange(value) {\n        this._partenza = value;\n        App.singleton.setState({treni:Utility.ricercaTreni(value, this._arrivo)});\n    }\n\n    handleSelectArrivoChange(value) {\n        this._arrivo = value;\n        App.singleton.setState({treni:Utility.ricercaTreni(this._partenza, value)})\n    }\n\n    getDatiRigaTreno(treno) {\n        const _posPartenza = Utility.getPosFermata(treno, this._partenza);\n        const _posArrivo = Utility.getPosFermata(treno, this._arrivo);\n\n        let result = {\n            \"stazione_partenza\": treno.fermate[0].stazione,\n            \"stazione_arrivo\": treno.fermate[treno.fermate.length -1].stazione,\n            \"orario_partenza\": treno.fermate[0].orario,\n            \"orario_arrivo\": treno.fermate[treno.fermate.length -1].orario,\n        };\n    \n        if(_posPartenza && _posPartenza >= 0) {\n          result.stazione_partenza = treno.fermate[_posPartenza].stazione;\n          result.orario_partenza = treno.fermate[_posPartenza].orario;\n        }\n        if(_posArrivo && _posArrivo >= 0) {\n          result.stazione_arrivo = treno.fermate[_posArrivo].stazione;\n          result.orario_arrivo = treno.fermate[_posArrivo].orario;\n        }\n\n        result.durata = Utility.getHourDiff(result.orario_partenza, result.orario_arrivo);\n\n        return result;\n    }\n\n}\n\nexport default ControllerRicerca;"]},"metadata":{},"sourceType":"module"}